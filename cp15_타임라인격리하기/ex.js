/*

    1. 코드를 타임라인 다이어그램으로 그리는 방법
    2. 버그를 찾기 위해 타임라인 다이어그램 보는 방법
    3. 타임라인끼리 공유하는 자원을 줄여 코드 설계를 개선하는 방법

*/

//타임라인 다이어그램

//버그 코드

function add_item_to_cart(name, price, quantity) {
    cart = add_item(cart, name, price, quantity);
    calc_cart_total
}

function calc_cart_total() {
    total = 0;
    cost_ajax(cart, function (cost) {
        total += coat;
        shipping_ajax(cart, function (shipping) {
            total += shipping;
            update_total_dom(total);
        });
    });
}

/*
위 함수의 액션 순서

    1. cart 읽기
    2. cart 쓰기.
    3. total = 0 쓰기
    4. cart 읽기
    5. cost_ajax 부르기
    6. total 읽기
    7. total 쓰기
    8. cost 읽기
    9. shipping_ajax 쓰기
    10. total 읽기
    11. total 쓰기
    12. total 읽기
    13. update_total_dom() 부르기

*/

/*
다이어그램을 그리기 위한 세 단계 

    1. 액션을 확인합니다
    2. 각 액션을 그립니다.
    3. 단순화 합니다.

*/


/*

    단일 스레드 
        1. 동기
            스레드가 하나면 타임라인도 하나이지만, 네트워크를 통한 API 호출 같은 것은 다른 타임라인이 필요함.
            but 메모리를 공유하지 않기 때문에 공유 자원을 많이 없앨 수 있음.

        2. 비동기 
            입출력 작업을 위해 비동기 모델을 사용해야 한다. 입출력의 결과는 콜백으로 바을수 있지만, 언제 끝날지 알 수 없어서 다른 타임라인애 표현해야 함




    멀티 스레드
        멀티스레드는 실행 순서를 보장하지 않기 때문에 프로그래밍 짜기 어려움. 새로운 스레드가 생기면 새로운 타임라인을 짜야 함.

    ** 서로 다른 스레드에 있으면 순서가 섞일 수 있다.

*/

/* 자바스크립트의 비동기 큐

    이벤트 큐와 작업 큐
        작업 큐는 이벤트 큐에 의해 처리됨.
        이벤트 루프는 큐에서 작업 하나를 꺼내 실행하고 완료되면 다음 작업을 꺼내 실행하는 작업을 반복함.
        이벤트 루프는 하나의 스레드에서 처리하기 때문에 두 개의 작업이 동시에 실행될 수 없다.

        ** 
        이벤트 루프는 큐 가장 앞에 있는 작업을 꺼내 실행하고 다음 작업을 처리함.
        큐는 들어온 순서대로 작업을 처리함
        (마우스 클릭같은) 이벤트가 발생했을 때 작업이 큐에 추가됨.
        비동기 동작을 호출하면 콜백은 작업에 추가된다.
        작업이 없을 떄는 이벤트 루프가 대기 상태로 들어가고 전원을 아낌. or 가비지 컬렉션 같은 관리 작업을 하기도 함.
        **
    연습문제
 0 1 0! 0 1 1 1 0 0 0 0
*/

// 비동기 호출에서 명시적인 출력을 위해 리턴값 대신 콜백을 사용할 수 있음

//동기
function aync(a) {
    return b
}

// 비동기
function asnc_(a, cb) {
    cb(a)
}

// 동기 함수는 리턴값을 사용하고 비동기 함수는 콜백을 사용함

// 동
function caller() {
    action1(aync(a))
}

//비동
function caller_() {
    async(a, action1)
}

// 동기 함수에서 호출하는 곳은 리턴값을 사용해 액션을 부르고 비동기 함수에서 호출하는 곳은 액션을 콜백으로 전달함.

